/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.popUps.Arriendos.Registrar;

import UI.main.Conexion;
import UI.main.mainFrame;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author momo
 */
public class frameRegistrarArriendo extends javax.swing.JFrame {

    /**
     * Creates new form frameRegistrarLibro
     */
    public frameRegistrarArriendo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        btnVolver = new javax.swing.JButton();
        btnConfirmarRegistro = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        lblRutCliente = new javax.swing.JLabel();
        txtRutCliente = new javax.swing.JTextField();
        lblRutTrabajador = new javax.swing.JLabel();
        txtRutTrabajador = new javax.swing.JTextField();
        lblCodSerial = new javax.swing.JLabel();
        lblGuia2 = new javax.swing.JLabel();
        lblImportante = new javax.swing.JLabel();
        lblGuia3 = new javax.swing.JLabel();
        lblDiasArriendo = new javax.swing.JLabel();
        txtCodigoSerial = new javax.swing.JTextField();
        txtDiasArriendo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Background.setBackground(new java.awt.Color(46, 49, 49));

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnConfirmarRegistro.setText("Confirmar registro");
        btnConfirmarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarRegistroActionPerformed(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setText("Registrar Arriendo:");

        lblRutCliente.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblRutCliente.setForeground(new java.awt.Color(255, 255, 255));
        lblRutCliente.setText("RUT Cliente:");

        txtRutCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblRutTrabajador.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblRutTrabajador.setForeground(new java.awt.Color(255, 255, 255));
        lblRutTrabajador.setText("RUT Trabajador:");

        lblCodSerial.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCodSerial.setForeground(new java.awt.Color(255, 255, 255));
        lblCodSerial.setText("Codigo serial del libro:");

        lblGuia2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblGuia2.setForeground(new java.awt.Color(255, 255, 255));
        lblGuia2.setText("- Para poder registrar un arriendo, el cliente debe estar registrado");

        lblImportante.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblImportante.setForeground(new java.awt.Color(255, 255, 255));
        lblImportante.setText("Importante:");

        lblGuia3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblGuia3.setForeground(new java.awt.Color(255, 255, 255));
        lblGuia3.setText("  previamente en la Base de Datos, al igual que el trabajador.");

        lblDiasArriendo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblDiasArriendo.setForeground(new java.awt.Color(255, 255, 255));
        lblDiasArriendo.setText("Dias a arrendar:");

        txtDiasArriendo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addComponent(btnVolver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConfirmarRegistro)
                        .addContainerGap())
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblImportante)
                            .addComponent(lblGuia2)
                            .addComponent(lblGuia3)
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRutCliente)
                                    .addComponent(lblRutTrabajador))
                                .addGap(71, 71, 71)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtRutTrabajador, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRutCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDiasArriendo)
                                    .addComponent(lblCodSerial))
                                .addGap(40, 40, 40)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDiasArriendo, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCodigoSerial, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 17, Short.MAX_VALUE))))
            .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(BackgroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblTitulo)
                    .addContainerGap(198, Short.MAX_VALUE)))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(lblImportante)
                .addGap(18, 18, 18)
                .addComponent(lblGuia2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblGuia3)
                .addGap(43, 43, 43)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodSerial)
                    .addComponent(txtCodigoSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDiasArriendo)
                    .addComponent(txtDiasArriendo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRutCliente)
                    .addComponent(txtRutCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRutTrabajador)
                    .addComponent(txtRutTrabajador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVolver)
                    .addComponent(btnConfirmarRegistro))
                .addContainerGap())
            .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(BackgroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(lblTitulo)
                    .addContainerGap(286, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        //Back to main Frame
        mainFrame mainF = new mainFrame();
        mainF.setVisible(true);
        mainF.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnConfirmarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarRegistroActionPerformed
        //Verificar datos
        boolean send = true;
        //INPUT TXT
        String codigoLibro = txtCodigoSerial.getText();
        String diasArriendo = txtDiasArriendo.getText();
        String rutCliente = txtRutCliente.getText();
        String rutTrabajador = txtRutTrabajador.getText();
        
        try {
            int intDiasArriendo = Integer.parseInt(diasArriendo);
            int intCodigoLibro = Integer.parseInt(codigoLibro);
            
            //Manejo de Fechas - DATE MANIPULATION
            SimpleDateFormat dayFormat = new SimpleDateFormat("dd");  
            SimpleDateFormat monthDormat = new SimpleDateFormat("MM"); 
            SimpleDateFormat yearFormat = new SimpleDateFormat("yyyy"); 

            //Fecha actual
            Date currentDate = new Date();

            String currentY = yearFormat.format(currentDate);
            String currentM = monthDormat.format(currentDate);
            String currentD = dayFormat.format(currentDate);
            
            //Calcular fecha aprox de entrega.
            Date deliverDate = new Date();
            Calendar cal = Calendar.getInstance();
            cal.setTime(deliverDate);
            cal.add(Calendar.DATE, intDiasArriendo);
            deliverDate = cal.getTime();

            String deliverYear = yearFormat.format(deliverDate);
            String deliverMonth = monthDormat.format(deliverDate);
            String deliverDay = dayFormat.format(deliverDate);
        
        
            //Verificacion de casillas vacias
            if(codigoLibro.equalsIgnoreCase("")){
                JOptionPane.showMessageDialog(null, "Porfavor llenar la casilla Codigo seial del libro.");
                System.out.println("No se lleno la casilla Codigo seial del libro");
                send = false;
            }
            if(diasArriendo.equalsIgnoreCase("")){
                JOptionPane.showMessageDialog(null, "Porfavor llenar la casilla Dias a arrendar.");
                System.out.println("No se lleno la casilla Dias a arrendar");
                send = false;
            }
            if(rutCliente.equalsIgnoreCase("")){
                JOptionPane.showMessageDialog(null, "Porfavor llenar la casilla RUT Cliente.");
                System.out.println("No se lleno la casilla RUT Cliente");
                send = false;
            }
            if(rutTrabajador.equalsIgnoreCase("")){
                JOptionPane.showMessageDialog(null, "Porfavor llenar la casilla RUT Trabajador.");
                System.out.println("No se lleno la casilla RUT Trabajador");
                send = false;
            }

        
        if(send){
            System.out.println("PRINT VALUES:");
            System.out.println("-------------------");
            System.out.println("Numero de serie del libro " + codigoLibro);
            System.out.println("RUT Cliente: " + rutCliente);
            System.out.println("RUT Trabajador: " + rutTrabajador);
            
            System.out.println("Costo Arriendo: $ HAY QUE BUSCARLO EN LA BASE DE DATOS.");
            System.out.println("------------------------");
            System.out.println("Fechas (YYY-MM-DD)");
            System.out.println("----------------------");
            System.out.println("Dias a arrendar: " + diasArriendo);
            System.out.println("Fecha Actual: " + currentY + "-" + currentM + "-" + currentD);
            System.out.println("Fecha Entrega : " + deliverYear + "-" + deliverMonth + "-" + deliverDay);
            System.out.println("");
            
            
            //Inicias Conexion a la BDD
            int valorArriendo = (600)* (intDiasArriendo);  //Buscar en la Base de datos el valor del libro.
            
            String query = " INSERT INTO ARRIENDO(COSTO_ARRIENDO, FECHA_ARRIENDO, DIAS_ARRENDADOS, FECHA_ENTREGA, FK_RUT_CLIENTE,"
                    + "FK_RUT_TRABAJADOR, FK_NUMERO_SERIE)"
                    + " values(?, ?, ?, ?, ?, ?, ?)";
            
            
            Conexion conector = new Conexion();
            Connection conn = conector.conectar();
            try {
             PreparedStatement preparedStmt = conn.prepareStatement(query);
                    preparedStmt.setInt(1, valorArriendo);
                    preparedStmt.setString(2, currentY + "-" + currentM + "-" + currentD);
                    preparedStmt.setInt(3, intDiasArriendo);
                    preparedStmt.setString(4, deliverYear + "-" + deliverMonth + "-" + deliverDay);
                    preparedStmt.setString(5, rutCliente);
                    preparedStmt.setString(6, rutTrabajador);
                    preparedStmt.setString(7, codigoLibro);


                    preparedStmt.execute();
                    conn.close();
                    preparedStmt.close();
                    JOptionPane.showMessageDialog(null, "Acción realizada con exito.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Fatal ERROR.");
            System.out.println("ERROR: " + e.toString());
        }
            
        }
        else{
            JOptionPane.showMessageDialog(null, "ERROR: No se conretó el registro.");
            System.out.println("-------------------");
            System.out.println("No se registró nada.");
            System.out.println("-------------------");
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Fatal ERROR.");
            System.out.println("ERROR" + e.toString());
        }
    }//GEN-LAST:event_btnConfirmarRegistroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frameRegistrarArriendo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frameRegistrarArriendo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frameRegistrarArriendo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frameRegistrarArriendo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frameRegistrarArriendo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JButton btnConfirmarRegistro;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel lblCodSerial;
    private javax.swing.JLabel lblDiasArriendo;
    private javax.swing.JLabel lblGuia2;
    private javax.swing.JLabel lblGuia3;
    private javax.swing.JLabel lblImportante;
    private javax.swing.JLabel lblRutCliente;
    private javax.swing.JLabel lblRutTrabajador;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextField txtCodigoSerial;
    private javax.swing.JTextField txtDiasArriendo;
    private javax.swing.JTextField txtRutCliente;
    private javax.swing.JTextField txtRutTrabajador;
    // End of variables declaration//GEN-END:variables
}
